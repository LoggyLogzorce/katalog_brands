document.addEventListener('DOMContentLoaded', () => {
    const stats = {
        total_brands: document.querySelector('.stats-container .stat-card:nth-child(1) .stat-value'),
        total_products: document.querySelector('.stats-container .stat-card:nth-child(2) .stat-value'),
        overall_rating: document.querySelector('.stats-container .stat-card:nth-child(3) .stat-value'),
        total_views: document.querySelector('.stats-container .stat-card:nth-child(4) .stat-value'),
    };
    const grid = document.querySelector('.brands-grid');

    function formatNumber(n) {
        return n.toLocaleString('ru-RU');
    }

    fetch('/api/v1/creator/brands')
        .then(res => res.json())
        .then(data => {
            const brands = data.brands;
            // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            stats.total_brands.textContent = brands.length;
            stats.total_products.textContent = brands.reduce((sum, b) => sum + b.products_count, 0);
            stats.overall_rating.textContent = (brands.reduce((s, b) => s + b.avg_rating, 0) / brands.length || 0).toFixed(1);
            stats.total_views.textContent = formatNumber(brands.reduce((s, b) => s + b.views, 0));

            // –û—á–∏—Å—Ç–∏–º –∏ –∑–∞–ø–æ–ª–Ω–∏–º —Å–µ—Ç–∫—É
            grid.innerHTML = '';
            brands.forEach(b => {
                const card = document.createElement('div');
                card.className = 'brand-card';
                card.innerHTML = `
          <div class="brand-image">
            <img src="/static/${b.logo_url}" alt="${b.name}">
            <div class="overlay"></div>
          </div>
          <div class="brand-info">
            <div>
              <h3 class="brand-name">${b.name}</h3>
              <div class="brand-products">${b.products_count} ${b.products_count === 1 ? '—Ç–æ–≤–∞—Ä' : b.products_count < 5 ? '—Ç–æ–≤–∞—Ä–∞' : '—Ç–æ–≤–∞—Ä–æ–≤'}</div>
            </div>
            <div class="brand-stats" style="display:flex;gap:8px;font-size:.9rem;color:#777">
              <span>‚òÖ ${b.avg_rating.toFixed(1)}</span>
              <span>üëÅ ${formatNumber(b.views)}</span>
            </div>
            <a href="/creator/brand/${encodeURIComponent(b.name)}" class="brand-link">
              –£–ø—Ä–∞–≤–ª—è—Ç—å –±—Ä–µ–Ω–¥–æ–º <i class="fas fa-arrow-right"></i>
            </a>
          </div>
        `;
                grid.append(card);
            });
        })
        .catch(err => {
            console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–∏ –±—Ä–µ–Ω–¥—ã:', err);
            grid.innerHTML = '<p style="padding:20px">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±—Ä–µ–Ω–¥–æ–≤.</p>';
        });

    const openBtn = document.getElementById('createBrandBtn');
    const modal = document.getElementById('createBrandModal');
    const closeBtn = document.querySelector('.close-modal');
    const cancelBtn = document.getElementById('cancelCreateBrand');
    const form = document.getElementById('createBrandForm');
    const logoInput = document.getElementById('brandLogoInput');
    const logoPreview = document.getElementById('logoPreview');

    // –û—Ç–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª–∫—É –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç—å —Ç–µ–∫—É—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    openBtn.addEventListener('click', () => {
        modal.classList.add('active');
    });

    // –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª–∫—É
    function closeModal() {
        modal.classList.remove('active');
    }

    // –°–æ–±—ã—Ç–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è
    closeBtn.addEventListener('click', closeModal);
    cancelBtn.addEventListener('click', closeModal);

    // –ó–∞–∫—Ä—ã—Ç—å –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    modal.addEventListener('click', (e) => {
        if (e.target === modal) {
            closeModal();
        }
    });

    // –ó–∞–∫—Ä—ã—Ç—å –ø–æ –∫–ª–∞–≤–∏—à–µ Esc
    document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && modal.classList.contains('active')) {
            closeModal();
        }
    });

    // –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ—Ç–∏–ø–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ñ–∞–π–ª–∞
    logoInput.addEventListener('change', function(e) {
        const file = this.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
                logoPreview.src = e.target.result;
                logoPreview.style.display = 'block';
            }
            reader.readAsDataURL(file);
        }
    });

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã
    form.addEventListener('submit', async e => {
        e.preventDefault();

        const url = `/api/v1/creator/brand/create`;
        const formData = new FormData(form);
        for (let [key, value] of formData.entries()) {
            console.log(key, value);
        }
        try {
            // –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É ¬´–°–æ—Ö—Ä–∞–Ω–∏—Ç—å¬ª –Ω–∞ –≤—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞
            const submitBtn = form.querySelector('button[type="submit"]');
            submitBtn.disabled = true;
            submitBtn.textContent = '–°–æ—Ö—Ä–∞–Ω—è–µ–º...';

            const response = await fetch(url, {
                method: 'POST',
                body: formData,
                credentials: 'include', // –µ—Å–ª–∏ –Ω—É–∂–Ω—ã –∫—É–∫–∏
            });

            if (!response.ok) {
                const err = await response.json().catch(() => ({}));
                throw new Error(err.error || '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è');
            }

            const updated = await response.json();
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É
            closeModal();

            alert('–ë—Ä–µ–Ω–¥ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!');

            window.location.href = `/creator/brand/${encodeURIComponent(updated.name)}`;
        } catch (err) {
            console.error(err);
            alert(err.message);
        } finally {
            const submitBtn = form.querySelector('button[type="submit"]');
            submitBtn.disabled = false;
            submitBtn.innerHTML = '<i class="fas fa-save"></i> –°–æ—Ö—Ä–∞–Ω–∏—Ç—å';
        }
    });
});